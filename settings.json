{
    // The number of spaces a tab is equal to. This setting is overridden based on the file contents when `editor.detectIndentation` is on.
    "editor.tabSize": 2,
    // Inserting and deleting whitespace follows tab stops
    "editor.useTabStops": false,
    // Configure file associations to languages (e.g. "*.extension": "html"). These have precedence over the default associations of the languages installed.
    // Controls if the editor should automatically close brackets after opening them
    "editor.autoClosingBrackets": "never",
    // Controls if the minimap is shown
    "editor.minimap.enabled": false,
    // Configure whether you receive automatic updates from an update channel. Requires a restart after change.
    "update.mode": "default",
    "breadcrumbs.enabled": true,
    "cmake.configureOnOpen": false,
    "rewrap.wrappingColumn": 90,
    "terminal.integrated.scrollback": 10000,
    "files.associations": {
        "*.inc": "cpp",
        "*.h": "cpp",
        "*.in": "cpp",
        "cctype": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "csetjmp": "cpp",
        "csignal": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "any": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "strstream": "cpp",
        "bit": "cpp",
        "*.tcc": "cpp",
        "bitset": "cpp",
        "cfenv": "cpp",
        "charconv": "cpp",
        "chrono": "cpp",
        "cinttypes": "cpp",
        "codecvt": "cpp",
        "complex": "cpp",
        "condition_variable": "cpp",
        "cstdint": "cpp",
        "cuchar": "cpp",
        "deque": "cpp",
        "forward_list": "cpp",
        "list": "cpp",
        "map": "cpp",
        "set": "cpp",
        "unordered_map": "cpp",
        "unordered_set": "cpp",
        "vector": "cpp",
        "exception": "cpp",
        "algorithm": "cpp",
        "functional": "cpp",
        "iterator": "cpp",
        "memory": "cpp",
        "memory_resource": "cpp",
        "numeric": "cpp",
        "optional": "cpp",
        "random": "cpp",
        "ratio": "cpp",
        "regex": "cpp",
        "string": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "utility": "cpp",
        "fstream": "cpp",
        "future": "cpp",
        "initializer_list": "cpp",
        "iomanip": "cpp",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "istream": "cpp",
        "limits": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "ostream": "cpp",
        "scoped_allocator": "cpp",
        "shared_mutex": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "thread": "cpp",
        "typeindex": "cpp",
        "typeinfo": "cpp",
        "valarray": "cpp",
        "variant": "cpp",
        "*.rcp": "cdl",
        "*impl.h": "cpp"
    },
    "editor.renderWhitespace": "none",
    "cmake.autoSelectActiveFolder": false,
    "cmake.buildBeforeRun": false,
    "cmake.clearOutputBeforeBuild": false,
    "[cpp]": {
        "editor.wordBasedSuggestions": "off",
        "editor.suggest.insertMode": "insert",
        "editor.semanticHighlighting.enabled": true
    },
    "editor.copyWithSyntaxHighlighting": false,
    "editor.largeFileOptimizations": false,
    "remote.SSH.remotePlatform": {
        "mlr-workstation": "linux",
        "mlr-lb-161": "linux",
        "mlr-lb-0208": "linux",
        "mlr-lb-ecsim105": "windows"
    },
    "security.workspace.trust.untrustedFiles": "open",
    "files.trimTrailingWhitespace": true,
    "telemetry.telemetryLevel": "off",
    "editor.bracketPairColorization.enabled": true,
    "workbench.colorTheme": "Arc+",
    "editor.unicodeHighlight.ambiguousCharacters": true,
    "editor.autoClosingQuotes": "never",
    "editor.autoSurround": "never",
    "cmake.configureOnEdit": false,
    "terminal.integrated.altClickMovesCursor": false,
    "search.exclude": {
        "**/node_modules": false
    },
    "terminal.integrated.profiles.windows": {
        "PowerShell": {
            "source": "PowerShell",
            "icon": "terminal-powershell"
        },
        "Command Prompt": {
            "path": [
                "${env:windir}\\Sysnative\\cmd.exe",
                "${env:windir}\\System32\\cmd.exe"
            ],
            "args": [],
            "icon": "terminal-cmd"
        },
        "Git Bash": {
            "source": "Git Bash"
        }
    },
    "gitlens.views.commitDetails.files.layout": "list",
    "editor.accessibilitySupport": "off",
    "projectManager.git.ignoredFolders": [
        "out",
        "typings",
        "test",
        ".haxelib"
    ],
    "explorer.autoRevealExclude": {
        "**/node_modules": false
    },
    "blockhighlight.background": [
        "155",
        "155",
        "155",
        ".05"
    ],
    "CppHelper.HeaderGuardPattern": "{FILE}_H_",
    "CppHelper.SourcePattern": [
        "{FILE}_impl.h",
        "{FILE}.inl",
        "{FILE}.cpp",
        "{FILE}.cxx",
        "{FILE}.cc",
        "{FILE}.cp",
        "{FILE}.c",
        "/src/{FILE}.inl",
        "/src/{FILE}.cpp",
        "/src/{FILE}.cxx",
        "/src/{FILE}.cc",
        "/src/{FILE}.cp",
        "/src/{FILE}.c",
        "/source/{FILE}.inl",
        "/source/{FILE}.cpp",
        "/source/{FILE}.cxx",
        "/source/{FILE}.cc",
        "/source/{FILE}.cp",
        "/source/{FILE}.c"
    ],
    "workbench.colorCustomizations": {
        "[Arc+]": {
            "list.activeSelectionBackground": "#78777a"
        }
    },
    "terminal.integrated.defaultProfile.windows": "Git Bash",
    "grunt.autoDetect": "on",
    "workbench.iconTheme": "material-icon-theme",
    "workbench.settings.applyToAllProfiles": [
        "files.trimTrailingWhitespace"
    ],
    "cmake.showOptionsMovedNotification": false,
    "diffEditor.ignoreTrimWhitespace": false,
    "cmake.pinnedCommands": [
        "workbench.action.tasks.configureTaskRunner",
        "workbench.action.tasks.runTask"
    ],
    "git.suggestSmartCommit": false,
    "editor.cursorSurroundingLines": 10,
    "codeium.enableConfig": {
        "*": true
    },
    "extensions.experimental.affinity": {
        "asvetliakov.vscode-neovim": 1
    },
    "doxdocgen.cpp.ctorText": "Constructor",
    "doxdocgen.cpp.dtorText": "Destructor",
    "doxdocgen.generic.returnTemplate": "@returns",



    // VIM settings
    "vim.leader": " ",
    "vim.useSystemClipboard": true,
    "vim.hlsearch": true,
    "vim.ignorecase": true,
    "vim.smartcase": true,
    "vim.incsearch": true,
    "vim.smartRelativeLine": true,
    "vim.handleKeys": {
        "<C-c>": false,
        "<C-v>": false,
        "<C-x>": false,
        "<C-a>": false,
        "<C-f>": false
    },
    "vim.normalModeKeyBindingsNonRecursive": [
      {
        "before": ["<leader>", "e"],
        "commands": ["workbench.view.explorer"]
      },
      {
        "before": ["<leader>", "b"],
        "commands": ["workbench.action.showAllEditors"]
      },
      {
        "before": ["<leader>", "q"],
        "commands": ["workbench.action.closeActiveEditor"]
      },
      {
        "before": ["<leader>", "w"],
        "commands": ["workbench.action.files.save"]
      },
      {
        "before": ["<leader>", "h"],
        "commands": ["workbench.action.focusSideBar"]
      },
      {
        "before": ["<leader>", "t"],
        "commands": ["workbench.action.terminal.toggleTerminal"]
      },
      {
        // find-file (VSCode Ctrl+P)
        "before": ["<leader>", "f", "f"],
        "commands": ["workbench.action.quickOpen"]
      },
      {
        "before": ["<leader>", "f", "g"],
        "commands": ["workbench.action.findInFiles"]
      },
      {
        "before": ["<leader>", "f", "s"],
        "commands": ["workbench.action.files.save"]
      },
      {
        "before": ["<leader>", "f", "w"],
        "commands": ["workbench.action.files.saveAll"]
      },
      {
        "before": ["<leader>", "f", "c"],
        "commands": ["workbench.action.files.close"]
      },
      {
        "before": ["<leader>", "f", "v"],
        "commands": ["workbench.action.splitEditorRight"]
      },
      {
        "before": ["<leader>", "f", "h"],
        "commands": ["workbench.action.splitEditorLeft"]
      },
      {
        "before": ["<leader>", "f"],
        "commands": ["workbench.action.files.openFile"]
      },
      {
        "before": ["<leader>", "p"],
        "commands": ["workbench.action.showAllEditorsByMostRecentlyUsed"]
      },
      {
        "before": ["<leader>", "r", "n"],
        "commands": ["editor.action.rename"]
      },
      {
        // Goto definition
        "before": ["g", "d"],
        "commands": ["editor.action.revealDefinition"]
      },
      {
        "before": ["g", "D"],
        "commands": ["editor.action.revealDeclaration"]
      },
      {
        "before": ["g", "r"],
        "commands": ["references-view.find"]
      },
      {
        // toggle comment on current line / selected lines
        "before": ["g", "c", "c"],
        "commands": ["editor.action.commentLine"]
      },
      {
        // toggle block comment, also with motions, like gc3j
        "before": ["g", "c"],
        "commands": ["editor.action.blockComment"]
      },
      {
        // Show documentation for symbol under cursor as tooltip
        "before": ["K"],
        "commands": ["editor.action.showHover"]
      },
      {
        "before": ["<leader>", "c", "a"],
        "commands": ["editor.action.quickFix"]
      },
      {
        "before": ["<leader>", "c", "r"],
        "commands": ["editor.action.rename"]
      },
      {
        "before": ["<leader>", "c", "f"],
        "commands": ["editor.action.formatDocument"]
      },
      {
        "before": ["<leader>", "c", "d"],
        "commands": ["editor.action.revealDefinitionAside"]
      },
      {
        // Goto next error
        "before": ["<leader>", "c", "e"],
        "commands": ["editor.action.marker.next"]
      },
      {
        // Goto previous error
        "before": ["<leader>", "c", "p"],
        "commands": ["editor.action.marker.prev"]
      },
      {
        // Switch between source and header file (supported only in C/C++ files)
        "before": ["<leader>", "a"],
        "commands": ["C_Cpp.SwitchHeaderSource"]
      }
    ],
    "vim.insertModeKeyBindings": [
      // Ctrl+H, Ctrl+J, Ctrl+K, Ctrl+L: navigation in insert mode similar to normal mode
      // so that we don't have to use the arrow keys
      {
        "before": ["<C-h>" ],
        "after": ["<left>"]
      },
      {
        "before": ["<C-j>"],
        "after": ["<down>"]
      },
      {
        "before": ["<C-k>"],
        "after": ["<up>"]
      },
      {
        "before": ["<C-l>"],
        "after": ["<right>"]
      }
    ],
    "vim.visualModeKeyBindingsNonRecursive": [
      {
        "before": ["<leader>","y"],
        "commands": ["editor.action.clipboardCopyAction"]
      },
      {
        "before": ["<leader>","d"],
        "commands": ["editor.action.clipboardCutAction"]
      },
      {
        "before": ["<leader>","p"],
        "commands": ["editor.action.clipboardPasteAction"]
      }
    ]
}