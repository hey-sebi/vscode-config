{
  // The number of spaces a tab is equal to. This setting is overridden based on the
  // file contents when `editor.detectIndentation` is on.
  "editor.tabSize": 2,
  // Inserting and deleting whitespace follows tab stops
  "editor.useTabStops": false,
  // Controls if the editor should automatically close brackets after opening them
  "editor.autoClosingBrackets": "never",
  // Controls if the minimap is shown
  "editor.minimap.enabled": false,
  // "editor.fontFamily": "Meslo LGL Mono Nerd Font", //JetBrains Mono Nerd Font",
  "editor.fontFamily": "JetBrains Mono Nerd Font",
  "terminal.integrated.fontFamily": "Consolas",
  // Configure whether you receive automatic updates from an update channel. Requires a
  // restart after change.
  "update.mode": "default",
  "zenMode.showTabs": "none",
  "rewrap.wrappingColumn": 90,
  "terminal.integrated.scrollback": 10000,
  // Configure file associations to languages (e.g. "*.extension": "html"). These have
  // precedence over the default associations of the languages installed.
  "files.associations": {
    "*.inc": "cpp",
    "*.h": "cpp",
    "*.in": "cpp",
    "cctype": "cpp",
    "clocale": "cpp",
    "cmath": "cpp",
    "csetjmp": "cpp",
    "csignal": "cpp",
    "cstdarg": "cpp",
    "cstddef": "cpp",
    "cstdio": "cpp",
    "cstdlib": "cpp",
    "cstring": "cpp",
    "ctime": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "any": "cpp",
    "array": "cpp",
    "atomic": "cpp",
    "strstream": "cpp",
    "bit": "cpp",
    "*.tcc": "cpp",
    "bitset": "cpp",
    "cfenv": "cpp",
    "charconv": "cpp",
    "chrono": "cpp",
    "cinttypes": "cpp",
    "codecvt": "cpp",
    "complex": "cpp",
    "condition_variable": "cpp",
    "cstdint": "cpp",
    "cuchar": "cpp",
    "deque": "cpp",
    "forward_list": "cpp",
    "list": "cpp",
    "map": "cpp",
    "set": "cpp",
    "unordered_map": "cpp",
    "unordered_set": "cpp",
    "vector": "cpp",
    "exception": "cpp",
    "algorithm": "cpp",
    "functional": "cpp",
    "iterator": "cpp",
    "memory": "cpp",
    "memory_resource": "cpp",
    "numeric": "cpp",
    "optional": "cpp",
    "random": "cpp",
    "ratio": "cpp",
    "regex": "cpp",
    "string": "cpp",
    "string_view": "cpp",
    "system_error": "cpp",
    "tuple": "cpp",
    "type_traits": "cpp",
    "utility": "cpp",
    "fstream": "cpp",
    "future": "cpp",
    "initializer_list": "cpp",
    "iomanip": "cpp",
    "iosfwd": "cpp",
    "iostream": "cpp",
    "istream": "cpp",
    "limits": "cpp",
    "mutex": "cpp",
    "new": "cpp",
    "ostream": "cpp",
    "scoped_allocator": "cpp",
    "shared_mutex": "cpp",
    "sstream": "cpp",
    "stdexcept": "cpp",
    "streambuf": "cpp",
    "thread": "cpp",
    "typeindex": "cpp",
    "typeinfo": "cpp",
    "valarray": "cpp",
    "variant": "cpp",
    "*.rcp": "cdl",
    "*impl.h": "cpp"
  },
  "editor.renderWhitespace": "none",
  "[cpp]": {
    "editor.wordBasedSuggestions": "allDocuments",
    "editor.suggest.insertMode": "insert",
    "editor.semanticHighlighting.enabled": true
  },
  "editor.copyWithSyntaxHighlighting": false,
  "editor.largeFileOptimizations": false,
  "security.workspace.trust.untrustedFiles": "open",
  "files.trimTrailingWhitespace": true,
  "telemetry.telemetryLevel": "off",
  "editor.bracketPairColorization.enabled": true,
  "editor.unicodeHighlight.ambiguousCharacters": true,
  "editor.autoClosingQuotes": "never",
  "editor.autoSurround": "never",
  "terminal.integrated.altClickMovesCursor": false,
  "search.exclude": {
    "**/node_modules": false,
    "**/__history": true,
    "**/__recovery": true
  },
  "files.watcherExclude": {
    "**/__recovery": true,
    "**/__history": true,
    "**/node_modules/*/**": false
  },
  "terminal.integrated.profiles.windows": {
    "PowerShell": {
      "source": "PowerShell",
      "icon": "terminal-powershell"
    },
    "Command Prompt": {
      "path": [
        "${env:windir}\\Sysnative\\cmd.exe",
        "${env:windir}\\System32\\cmd.exe"
      ],
      "args": [],
      "icon": "terminal-cmd"
    },
    "Git Bash": {
      "source": "Git Bash"
    }
  },
  "editor.accessibilitySupport": "off",
  "explorer.autoRevealExclude": {
    "**/node_modules": false
  },
  "editor.semanticHighlighting.enabled": true,
  // prevent VSCode from modifying the terminal colors
  "terminal.integrated.minimumContrastRatio": 1,
  // disable usage of italics

  "terminal.integrated.defaultProfile.windows": "Git Bash",
  // editor or view
  "terminal.integrated.defaultLocation": "view",
  "grunt.autoDetect": "on",
  "workbench.settings.applyToAllProfiles": [
    "files.trimTrailingWhitespace"
  ],
  "diffEditor.ignoreTrimWhitespace": false,
  "git.suggestSmartCommit": false,
  "git.blame.editorDecoration.enabled": true,
  "git.blame.statusBarItem.enabled": false,
  "editor.cursorSurroundingLines": 10,
  "extensions.ignoreRecommendations": true,

  // -------------------------------------------------------------------
  // Doxygen settings
  // -------------------------------------------------------------------
  "doxdocgen.cpp.ctorText": "Constructor",
  "doxdocgen.cpp.dtorText": "Destructor",
  "doxdocgen.generic.returnTemplate": "@returns",
  // -------------------------------------------------------------------
  // CMake
  // -------------------------------------------------------------------
  "cmake.configureOnEdit": false,
  "cmake.pinnedCommands": [
    "workbench.action.tasks.configureTaskRunner",
    "workbench.action.tasks.runTask"
  ],
  "cmake.showOptionsMovedNotification": false,

  "remote.SSH.remotePlatform": {
    "mlr-lb-161": "linux"
  },

  // -------------------------------------------------------------------
  // VSCode VIM settings
  // -------------------------------------------------------------------
  "extensions.experimental.affinity": {
    "vscodevim.vim": 1
  },
  "vim.leader": " ",
  "vim.useSystemClipboard": true,
  "vim.hlsearch": true,
  "vim.ignorecase": true,
  "vim.smartcase": true,
  "vim.incsearch": true,

  // Values for Github Dark:
  // -------------------------------------------------------------------
  // Background color of current search match
  // "vim.searchMatchColor": "#008000",
  // Background color of non-current search matches
  // "vim.searchHighlightColor": "#754785",
  // -------------------------------------------------------------------

  // Values for Tokyo Night:
  // -------------------------------------------------------------------
  // Background color of current search match
  "vim.searchMatchColor": "#0db9d7",
  // match border for search highlighting to vim.searchMatchColor
  "workbench.colorCustomizations": {
    "editor.findMatchBorder": "#0db9d7"
  },
  // Foreground color of current search match
  "vim.searchMatchTextColor": "#ffffff",
  // Background color of non-current search matches
  "vim.searchHighlightColor": "#754785",
  // Foreground of non-current search matches
  "vim.searchHighlightTextColor": "#ffffff",
  // -------------------------------------------------------------------

  "vim.smartRelativeLine": true,
  "vim.normalModeKeyBindings": [
    {
      // workaround for bug https://github.com/VSCodeVim/Vim/issues/3201
      "before" : ["u"],
      "commands" : [ "undo" ]
    },
    {
      // workaround for bug https://github.com/VSCodeVim/Vim/issues/3201
      "before" : ["<C-r>"],
      "commands" : [ "redo" ]
    }
  ],
  "vim.normalModeKeyBindingsNonRecursive": [
    {
      // call :nohl (no highlight)
      "before": ["<C-n>"],
      "commands": [":nohl"]
    },
    {
      // center screen after using C-u
      "before": ["C-u"],
      "after": ["C-u", "z", "z"]
    },
    {
      // center screen after using C-d
      "before": ["C-d"],
      "after": ["C-d", "z", "z"]
    }
  ],
  "vim.highlightedyank.enable": true,
  "vim.highlightedyank.color": "#a9dc7660",
  "vim.highlightedyank.duration": 250,
  "vim.camelCaseMotion.enable" : true,
  "editor.tokenColorCustomizations": {
    // disable italic font
    "textMateRules": [
      {
        "scope": [
          "comment",
          "comment.block",
          "comment.block.documentation",
          "comment.line",
          "constant",
          "constant.character",
          "constant.character.escape",
          "constant.numeric",
          "constant.numeric.integer",
          "constant.numeric.float",
          "constant.numeric.hex",
          "constant.numeric.octal",
          "constant.other",
          "constant.regexp",
          "constant.rgb-value",
          "emphasis",
          "entity",
          "entity.name",
          "entity.name.class",
          "entity.name.function",
          "entity.name.method",
          "entity.name.section",
          "entity.name.selector",
          "entity.name.tag",
          "entity.name.type",
          "entity.other",
          "entity.other.attribute-name",
          "entity.other.inherited-class",
          "invalid",
          "invalid.deprecated",
          "invalid.illegal",
          "keyword",
          "keyword.control",
          "keyword.operator",
          "keyword.operator.new",
          "keyword.operator.assignment",
          "keyword.operator.arithmetic",
          "keyword.operator.logical",
          "keyword.other",
          "markup",
          "markup.bold",
          "markup.changed",
          "markup.deleted",
          "markup.heading",
          "markup.inline.raw",
          "markup.inserted",
          "markup.italic",
          "markup.list",
          "markup.list.numbered",
          "markup.list.unnumbered",
          "markup.other",
          "markup.quote",
          "markup.raw",
          "markup.underline",
          "markup.underline.link",
          "meta",
          "meta.block",
          "meta.cast",
          "meta.class",
          "meta.function",
          "meta.function-call",
          "meta.preprocessor",
          "meta.return-type",
          "meta.selector",
          "meta.tag",
          "meta.type.annotation",
          "meta.type",
          "punctuation.definition.string.begin",
          "punctuation.definition.string.end",
          "punctuation.separator",
          "punctuation.separator.continuation",
          "punctuation.terminator",
          "storage",
          "storage.modifier",
          "storage.type",
          "string",
          "string.interpolated",
          "string.other",
          "string.quoted",
          "string.quoted.double",
          "string.quoted.other",
          "string.quoted.single",
          "string.quoted.triple",
          "string.regexp",
          "string.unquoted",
          "strong",
          "support",
          "support.class",
          "support.constant",
          "support.function",
          "support.other",
          "support.type",
          "support.type.property-name",
          "support.variable",
          "variable",
          "variable.language",
          "variable.name",
          "variable.other",
          "variable.other.readwrite",
          "variable.parameter",
          "storage.type.ts",
          "keyword.control.flow.ts"
        ],
        "settings": {
          "fontStyle": ""
        }
      }
    ]
  },
  // Themes that work for me:
  // Github Dark, Gruvbox Material Dark, One Candy Dark
  // Unsure: Tokyo Night Moon
  "workbench.colorTheme": "Tokyo Night Moon",

  // Values for Tokyo Night:
  // make the window's titlebar use the workbench colors
  "window.titleBarStyle": "custom",

  "C_Cpp.codeFolding": "disabled",
  "C_Cpp.default.cppStandard": "c++17",
  "C_Cpp.default.cStandard": "c17",
  "C_Cpp.default.intelliSenseMode": "msvc-x86",
  /// Reduce CPU load for intellisense parsing
  "C_Cpp.workspaceParsingPriority": "high",
  "C_Cpp.intelliSenseCachePath": "D:\\vscode_cache\\Microsoft\\vscode-cpptools"
}
  // "vim.handleKeys": {
  //   "<C-c>": false,
  //   "<C-v>": false,
  //   "<C-x>": false,
  //   "<C-a>": false,
  //   "<C-f>": false